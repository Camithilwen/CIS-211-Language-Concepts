#BlueJ class context
comment0.target=Item
comment0.text=\r\n\ Absract\ parent\ class\ for\ the\ posible\ contents\ of\ a\ library\ catalog.\r\n\ This\ parent\ class\ contains\ the\ bulk\ of\ the\ general\ data\ collected\ for\r\n\ catalogued\ media.\ Child\ classes\ can\ and\ should\ extend\ with\ any\ media-specific\ parameters.\r\n\ \r\n\r\n\ @author\ Jamie\ Kemman\r\n\ @version\ 1.0\r\n
comment1.params=
comment1.target=Item()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Item\r\n
comment10.params=input
comment10.target=void\ setLocalCallNum(java.lang.String)
comment10.text=\r\n\ Setter\ for\ the\ physical\ cataloguing\ number\ of\ the\ Item.\r\n\ @param\ takes\ a\ String\ as\ input.\ This\ could\ be\ changed\ later\ to\ a\ Class\ for\ the\ cataloguing\ system\ (e.g.,\ LC,\ Dewey).\r\n
comment11.params=
comment11.target=java.lang.String\ getLocalCallNum()
comment11.text=\r\n\ Retrieves\ the\ physical\ cataloguing\ number.\r\n\ @return\ returns\ a\ String.\r\n
comment12.params=input
comment12.target=void\ setDOI(java.lang.String)
comment12.text=\r\n\ Allows\ entry\ of\ a\ Digital\ Object\ Identifier.\ These\ come\ in\ many\ formats,\ so\ String\ is\ probably\ best-suited\ in\ the\ long\ run.\r\n\ @param\ takes\ a\ String\ as\ input.\r\n
comment13.params=
comment13.target=java.lang.String\ getDOI()
comment13.text=\r\n\ Retrieves\ the\ Digital\ Object\ Identifier.\r\n\ @return\ returns\ a\ String.\r\n
comment14.params=input
comment14.target=void\ setVolume(java.lang.String)
comment14.text=\r\n\ Setter\ for\ the\ volume\ number.\r\n\ @param\ takes\ a\ String\ as\ input.\r\n
comment15.params=
comment15.target=java.lang.String\ getVolume()
comment15.text=\r\n\ Retrieves\ the\ volume\ number.\r\n\ @return\ returns\ a\ String.\r\n
comment16.params=input
comment16.target=void\ setEdition(java.lang.String)
comment16.text=\r\n\ Setter\ for\ the\ edition\ (e.g.,\ 1st,\ 2nd)\r\n\ @param\ takes\ a\ String\ as\ input.\r\n
comment17.params=
comment17.target=java.lang.String\ getEdition()
comment17.text=\r\n\ Retrieves\ the\ edition.\r\n\ @return\ returns\ a\ String.\r\n
comment18.params=input
comment18.target=void\ setFormat(java.lang.String)
comment18.text=\r\n\ Sets\ a\ message\ denoting\ the\ format\ type\ (e.g.,\ Print,\ Digital)\r\n\ @param\ takes\ a\ String\ as\ input.\r\n
comment19.params=
comment19.target=java.lang.String\ getFormat()
comment19.text=\r\n\ Retrieves\ the\ format\ type\ message.\r\n\ @return\ returns\ a\ String.\r\n
comment2.params=input
comment2.target=void\ setTitle(java.lang.String)
comment2.text=\r\n\ Sets\ the\ Item\ title.\r\n\ @param\ takes\ a\ String\ as\ input.\r\n
comment20.params=input
comment20.target=void\ setShelvingLoc(java.lang.String)
comment20.text=\r\n\ Sets\ a\ message\ denoting\ the\ physical\ shelving\ location\ in\ the\ library.\r\n\ @param\ takes\ a\ String\ as\ input.\r\n
comment21.params=
comment21.target=java.lang.String\ getShelvingLoc()
comment21.text=\r\n\ Retrieves\ the\ shelving\ location\ message.\r\n\ @return\ returns\ a\ String.\r\n
comment22.params=
comment22.target=java.lang.String\ toString()
comment22.text=\r\n\ Overrides\ the\ default\ toString\ method\ of\ Object().\r\n\ @return\ returns\ a\ human-readable\ string\ containing\ all\ Item\ data.\r\n
comment23.params=that
comment23.target=boolean\ equals(Item)
comment23.text=\r\n\ Overrides\ the\ default\ equals\ method\ of\ Object().\r\n\ @param\ takes\ a\ second\ Item\ or\ child\ object.\r\n\ @return\ returns\ a\ boolean\ indicating\ equality\ based\ on\ Call\ Number.\r\n
comment24.params=that
comment24.target=int\ compareTo(Item)
comment24.text=\r\n\ Overrides\ the\ default\ compareTo\ method\ of\ Object().\r\n\ @param\ takes\ a\ second\ Item\ or\ child\ object.\r\n\ @return\ returns\ an\ int\ value\ indicating\ relative\ position\ based\ on\ Call\ Number.\r\n
comment3.params=
comment3.target=java.lang.String\ getTitle()
comment3.text=\r\n\ Retrieves\ the\ Item\ title.\r\n\ @return\ returns\ a\ String.\r\n
comment4.params=input
comment4.target=void\ setAuthor(java.lang.String)
comment4.text=\r\n\ Authors\ are\ stored\ in\ their\ own\ ArrayList,\ so\ multiple\ invokations\ of\r\n\ setAuthor\ will\ update\ the\ list\ accordingly.\r\n\ @param\ takes\ a\ String\ as\ input.\r\n
comment5.params=
comment5.target=java.lang.String\ getAuthor()
comment5.text=\r\n\ Retrieves\ the\ ArrayList\ containing\ all\ Authors.\r\n\ @return\ returns\ the\ ArrayList\ as\ a\ String.\r\n
comment6.params=input
comment6.target=void\ setPublisher(java.lang.String)
comment6.text=\r\n\ Sets\ the\ publisher\ name.\r\n\ @param\ takes\ a\ String\ as\ input.\r\n
comment7.params=
comment7.target=java.lang.String\ getPublisher()
comment7.text=\r\n\ Retrieves\ the\ publisher\ information.\r\n\ @return\ returns\ a\ String.\r\n
comment8.params=input
comment8.target=void\ setPublicationDate(int)
comment8.text=\r\n\ I\ found\ the\ Year\ object\ in\ JavaDoc\ and\ have\ implemented\ it\ here.\r\n\ It\ serves\ no\ purpose\ as\ yet\ besides\ storing\ an\ integer,\ but\r\n\ if\ I\ later\ expand\ this\ project\ for\ practice\ the\ Year\ object\ has\ more\ inherent\ function\ built\ in\r\n\ than\ just\ storing\ a\ basic\ value.\r\n\ @param\ takes\ an\ int\ as\ input.\r\n
comment9.params=
comment9.target=java.lang.String\ getPublicationDate()
comment9.text=\r\n\ Retrieves\ the\ publication\ date.\r\n\ @return\ returns\ a\ String.\r\n
numComments=25
